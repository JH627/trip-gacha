<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.gacha.model.dao.TripScheduleDao">

    <insert id="insertSchedule" useGeneratedKeys="true" keyProperty="form.tripScheduleId">
        INSERT INTO trip_schedule (
            user_id,
            destination_id,
            title,
            created_at,
            is_shared,
            start_date,
            end_date
        )
        VALUES (
            #{userId},
            #{form.destinationId},
            #{form.title},
            NOW(),
            false,
            #{form.startDate},
            #{form.endDate}
        )
    </insert>

    <insert id="insertScheduleItems">
        INSERT INTO trip_schedule_items (
            spot_id,
            trip_schedule_id,
            day,
            sequence
        )
        VALUES
        <foreach collection="items" item="item" separator=",">
            (#{item.spotId}, #{scheduleId}, #{item.day}, #{item.sequence})
        </foreach>
    </insert>

    <select id="selectAllScheduleByUserId" resultType="com.gacha.model.dto.trip.ScheduleInfo">
        SELECT 
            ts.trip_route_id as scheduleId,
            ts.title,
            d.name as destination,
            d.img as destinationImg,
            ts.start_date as startDate,
            ts.end_date as endDate,
            ts.created_at as createAt
        FROM trip_schedule ts
        JOIN destinations d ON ts.destination_id = d.destination_id
        WHERE ts.user_id = #{userId}
        ORDER BY ts.created_at DESC
    </select>

    <select id="checkIsShared" resultType="boolean">
        SELECT EXISTS (
            SELECT 1 FROM trip_schedule 
            WHERE trip_route_id = #{scheduleId} 
            AND (user_id = #{userId} OR is_shared = true)
        )
    </select>

    <select id="selectScheduleByUserId" resultMap="scheduleDetailMap">
        SELECT 
            ts.title,
            ts.start_date as startDate,
            ts.end_date as endDate,
            ts.created_at as createAt,
            tsi.day,
            tsi.sequence as orderNum,
            s.spot_id as spotId,
            d.name as destination,
            s.name,
            s.content,
            s.img,
            s.address,
            s.likes,
            s.stars,
            sc.name as category,
            s.phone,
            s.work_time as workTime,
            CASE WHEN b.bookmark_id IS NOT NULL THEN true ELSE false END as marked
        FROM trip_schedule ts
        LEFT JOIN trip_schedule_items tsi ON ts.trip_route_id = tsi.trip_schedule_id
        LEFT JOIN spots s ON tsi.spot_id = s.spot_id
        LEFT JOIN destinations d ON s.destination_id = d.destination_id
        LEFT JOIN spot_categories sc ON s.category_id = sc.category_id
        LEFT JOIN bookmarks b ON s.spot_id = b.spot_id AND b.user_id = #{userId}
        WHERE ts.trip_route_id = #{scheduleId}
        AND (ts.user_id = #{userId} OR ts.is_shared = true)
        ORDER BY tsi.day, tsi.sequence
    </select>

    <resultMap id="scheduleDetailMap" type="com.gacha.model.dto.trip.ScheduleDetail">
        <result property="title" column="title"/>
        <result property="startDate" column="startDate"/>
        <result property="endDate" column="endDate"/>
        <result property="createAt" column="createAt"/>
        <collection property="scheduleDetailItems" ofType="com.gacha.model.dto.trip.ScheduleDetailItem">
            <result property="day" column="day"/>
            <result property="order" column="orderNum"/>
            <association property="spotInfo" javaType="com.gacha.model.dto.trip.SpotInfo">
                <result property="spotId" column="spotId"/>
                <result property="destination" column="destination"/>
                <result property="name" column="name"/>
                <result property="content" column="content"/>
                <result property="img" column="img"/>
                <result property="address" column="address"/>
                <result property="likes" column="likes"/>
                <result property="stars" column="stars"/>
                <result property="category" column="category"/>
                <result property="phone" column="phone"/>
                <result property="workTime" column="workTime"/>
                <result property="marked" column="marked"/>
            </association>
        </collection>
    </resultMap>

</mapper>
